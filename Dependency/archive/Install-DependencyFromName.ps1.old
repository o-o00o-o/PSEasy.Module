function Install-DependencyFromName {
    Param(
        [Parameter()]
        [Alias('Context')]
        [PSCustomObject]
        # a Context object from Get-VegaContext
        $InputObject,

        [Parameter(Position = 1, Mandatory)]
        [string]
        # Specifies the type of dependency to install
        $Path,

        [Parameter(Position = 2)]
        [string]
        # The destination folder to install to (if required)
        $Destination,

        [parameter()]
        [switch]
        # By default we won't install if already installed. Force will first remove then install again
        $Force
    )
    $type = ($Path.split('.\'.ToCharArray()))[0]
    $name = $Path.Replace("$type.",'')

    if (-not ('WebDownload', 'Nuget', 'Module', 'PackageProvider').Contains($type)) {
        throw "$type is not a known installer type (from $Path)"
    }
    # we have .'s in our names and GetValue needs these so we can quote it. Thanks Invoke-Expression!
    $dependency = $InputObject.GetValue("dependencies.$type.""$name""")

    Install-DependencyFromNameAndType -Type $type -Name $name -Dependency $dependency -Destination $Destination -Force:$Force.IsPresent
}
